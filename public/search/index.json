[{"content":"SNS 친구 추천 시스템 sns에서 사용자들 간의 친구 관계를 그래프로 표현하고, 특정 사용자에게 새로운 친구를 추천하는 프로그램\n요구사항 무방향 그래프로 친구 관계를 표현 특정 사용자의 친구가 아니면서, 공통 친구가 가장 많은 사용자들을 추천 추천 대상은 공통 친구 수가 많은 순서대로 정렬 단, 공통 친구 수가 같다면 사용자 ID 오름차순으로 정렬 주의사항 그래프는 인접 리스트로 표현해야 한다. 추천 친구가 없을 경우에는 \u0026ldquo;No Friend\u0026quot;라고 출력해야 한다. 프로그램의 실행은 명령줄에서 아래와 같이 실행되어야 한다. 코드 graph.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #ifndef _GRAPH_ #define _GRAPH_ #define TRUE 1 #define FALSE 0 #define MAX_VERTICES 50 typedef struct GraphNode { int vertex; struct GraphNode* link; } GraphNode; typedef struct GraphType { int n;\tGraphNode* adj_list[MAX_VERTICES]; } GraphType; void graph_init(GraphType* g); void insert_vertex(GraphType* g, int v); void insert_edge(GraphType* g, int u, int v); void Findfriend(GraphType* g, int id, int n); int Checknode(GraphType* g, int id, int n); #endif // !_GRAPH_ graph.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 #define _CRT_SECURE_NO_WARNINGS #define _CRT_NONSTDC_NO_DEPRECATE #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;string.h\u0026gt; #include \u0026lt;ctype.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;math.h\u0026gt; #include \u0026lt;time.h\u0026gt; #include \u0026lt;malloc.h\u0026gt; #include \u0026#34;graph.h\u0026#34; void graph_init(GraphType* g) { int v; g-\u0026gt;n = 0; for (v = 0; v \u0026lt; MAX_VERTICES; v++) g-\u0026gt;adj_list[v] = NULL; } void insert_vertex(GraphType* g, int v) { if (((g-\u0026gt;n) + 1) \u0026gt; MAX_VERTICES) { fprintf(stderr, \u0026#34;그래프: 정점의 개수 초과\u0026#34;); return; } g-\u0026gt;n++; } void insert_edge(GraphType* g, int u, int v) { GraphNode* node; if (u \u0026gt;= g-\u0026gt;n || v \u0026gt;= g-\u0026gt;n) { fprintf(stderr, \u0026#34;그래프: 정점 번호 오류\u0026#34;); return; } node = (GraphNode*)malloc(sizeof(GraphNode)); node-\u0026gt;vertex = v; node-\u0026gt;link = g-\u0026gt;adj_list[u]; g-\u0026gt;adj_list[u] = node; } // 친구를 찾아서 추천해주는 코드 void Findfriend(GraphType* g, int id, int n){ id -= 1; int *A = (int*)malloc(n * sizeof(int)); int *B = (int*)malloc(n * sizeof(int)); for (int i = 0; i \u0026lt; n; i++){ A[i] = 0; B[i] = 0; } // id와 연결되어 있는 노드들을 탐색 GraphNode* node = g-\u0026gt;adj_list[id]; for (;node != NULL; node = node-\u0026gt;link){ GraphNode* _node = g-\u0026gt;adj_list[node-\u0026gt;vertex]; while (_node != NULL){ if (_node-\u0026gt;link != NULL \u0026amp;\u0026amp; _node-\u0026gt;vertex != id) { // 노드가 겹치는 지 확인 if (Checknode(g, id, _node-\u0026gt;vertex)){ // B 배열에 인덱스를 저장 B[_node-\u0026gt;vertex] = _node-\u0026gt;vertex; // A 배열에 해당 인덱스의 횟수 카운트 A[_node-\u0026gt;vertex] += 1; } } _node = _node-\u0026gt;link; } } // 정렬 for (int i = 0; i \u0026lt; n - 1; i++){ for (int j = i + 1; j \u0026lt; n; j++){ if (B[i] != 0){ // 공통 친구 수가 많은 순서대로 정렬 if (A[B[i]] \u0026lt; A[B[i+1]]){ int temp = B[i]; B[i] = B[i+1]; B[i+1] = temp; } // 사용자 ID 오름차순으로 정렬 if (A[B[i]] == A[B[i+1]]){ if (B[i] \u0026gt; B[i+1]){ int temp = B[i]; B[i] = B[i+1]; B[i+1] = temp; } } } } } int sum = 0; for (int i = 0; i \u0026lt; n; i++){ if (A[i] != 0) printf(\u0026#34;%d %d\\n\u0026#34;, B[i] + 1, A[i]); sum += A[i]; } // 추천 친구가 없다면 \u0026#34;No Friend\u0026#34; 출력 if (sum == 0) printf(\u0026#34;No friend\\n\u0026#34;); free(A); free(B); } // 겹치는 노드의 여부를 체크 int Checknode(GraphType* g, int id, int n) { GraphNode* checkNode = g-\u0026gt;adj_list[id]; while (checkNode != NULL) { if (checkNode-\u0026gt;vertex == n) { return 0; } checkNode = checkNode-\u0026gt;link; } return 1; } main.c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #define _CRT_SECURE_NO_WARNINGS #define _CRT_NONSTDC_NO_DEPRECATE #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;string.h\u0026gt; #include \u0026lt;ctype.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;math.h\u0026gt; #include \u0026lt;time.h\u0026gt; #include \u0026lt;malloc.h\u0026gt; #include \u0026#34;graph.h\u0026#34; int main(int argc, char *argv[]) { if (argc != 2) { fprintf(stderr, \u0026#34;Usage: %s graph.txt\\n\u0026#34;, argv[0]); exit(EXIT_FAILURE); } const char* fname = argv[1]; FILE* fin = fopen(fname, \u0026#34;r\u0026#34;); if (fin == NULL) { fprintf(stderr, \u0026#34;Can`t open %s\\n\u0026#34;, fname); exit(EXIT_FAILURE); } GraphType g; graph_init(\u0026amp;g); int n, m, id, fr, to; fscanf(fin, \u0026#34;%d %d %d\u0026#34;, \u0026amp;n, \u0026amp;m, \u0026amp;id); for (int i = 0; i \u0026lt; n; i++) insert_vertex(\u0026amp;g, i); for (int i = 0; i \u0026lt; m; i++) { fscanf(fin, \u0026#34;%d %d\u0026#34;, \u0026amp;fr, \u0026amp;to); insert_edge(\u0026amp;g, fr - 1, to - 1); insert_edge(\u0026amp;g, to - 1, fr - 1); } Findfriend(\u0026amp;g, id, n); fclose(fin); return 0; } ","date":"2025-08-25T00:00:00Z","image":"http://localhost:1313/p/sns/sns_hu_8e50adcb1d25edb1.jpg","permalink":"http://localhost:1313/p/sns/","title":"sns"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"http://localhost:1313/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"http://localhost:1313/p/image-gallery/2_hu_3e58a979f20e4e46.jpg","permalink":"http://localhost:1313/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"http://localhost:1313/p/shortcodes/cover_hu_5667347daefb4230.jpg","permalink":"http://localhost:1313/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"http://localhost:1313/p/math-typesetting/","title":"Math Typesetting"}]